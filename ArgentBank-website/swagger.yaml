swagger: "2.0"
info:
 title: Bank Argent API documentation
 description: Contains all available API endpoints in this codebase
 version: "1.0.0"
 termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
 - http
paths:
 /user/login:
  post:
   tags:
    - User Module
   summary: Login
   description: API for Login
   parameters:
    - in: body
      name: body
      description: Login Payload
      required: true
      schema:
       $ref: "#/definitions/Login"
   produces:
    - application/json
   responses:
    "200":
     description: Login Successfully
     schema:
      $ref: "#/definitions/LoginResponse"
    "400":
     description: Invalid Fields
    "500":
     description: Internal Server Error
 /user/signup:
  post:
   tags:
    - User Module
   summary: Signup
   description: API for Signup
   parameters:
    - in: body
      name: body
      description: Signup Payload
      required: true
      schema:
       $ref: "#/definitions/User"
   produces:
    - application/json
   responses:
    "200":
     description: Signup Successfully
     schema:
      $ref: "#/definitions/ApiResponse"
    "400":
     description: Invalid Fields
    "500":
     description: Internal Server Error
 /user/profile:
  post:
   security:
    - Bearer: []
   tags:
    - User Module
   summary: User Profile API
   description: API for fetching a user profile
   #produces:
   # - application/json
   responses:
    "200":
     description: User profile retrieved successully
     schema:
      $ref: "#/definitions/ApiResponse"
    "400":
     description: Invalid Fields
    "500":
     description: Internal Server Error
  put:
   security:
    - Bearer: []
   tags:
    - User Module
   summary: User Profile API
   description: API for updating a user profile
   parameters:
    - in: body
      name: body
      description: Update user profile attributes
      required: true
      schema:
       $ref: "#/definitions/UserProfile"
   produces:
    - application/json
   responses:
    "200":
     description: User profile retrieved successully
     schema:
      $ref: "#/definitions/ApiResponse"
    "400":
     description: Invalid Fields
    "500":
     description: Internal Server Error
 /user/accounts:
  get:
   security:
    - Bearer: []
   tags:
    - Transaction Module
   summary: User Accounts API
   description: API for fetching all user accounts for a specific token
   produces:
    - application/json
   responses:
    "200":
     description: User accounts retrieved successully
     schema:
      $ref: "#/definitions/ApiAccountResponse"
    "401":
     description: No user found for this token
    "500":
     description: Internal Server Error
 /user/accounts/{accountid}/transactions:
  post:
   security:
    - Bearer: []
   tags:
    - Transaction Module
   summary: User transactions API
   description: API for fetching all transactions for a specific account
   parameters:
    - in: body
      name: body
      description: Fetch user transactions for a specific account
      required: true
      schema:
       $ref: "#/definitions/UserAccount"
   produces:
    - application/json
   responses:
    "200":
     description: User Transactions retrieved successully
     schema:
      $ref: "#/definitions/ApiTransactionsResponse"
    "400":
     description: Invalid Fields
    "401":
     description: Unauthorized
    "500":
     description: Internal Server Error
 /user/accounts/{accountId}/transactions/{transactionId}:
  put:
   security:
    - Bearer: []
   tags:
    - Transaction Module
   summary: Modify note or category
   description: API for updating a specific transaction
   parameters:
    - in: body
      name: body
      description: modify note or category associated to a specific transaction
      required: true
      schema:
       $ref: "#/definitions/UserModifyTransaction"
   produces:
    - application/json
   responses:
    "200":
     description: User Transaction modified successully
     schema:
      $ref: "#/definitions/ApiModificationResponse"
    "400":
     description: Invalid Fields
    "401":
     description: Unauthorized
    "500":
     description: Internal Server Error
 /user/accounts/{accountId}/transactions/{transactionId}/note:
  delete:
   security:
    - Bearer: []
   tags:
    - Transaction Module
   summary: Delete note
   description: API for deleting note of a specific transaction
   parameters:
    - in: body
      name: body
      description: delete note associated to a specific transaction
      required: true
      schema:
       $ref: "#/definitions/UserTransaction"
   produces:
    - application/json
   responses:
    "200":
     description: Note successfully deleted
     schema:
      $ref: "#/definitions/ApiDeleteResponse"
    "400":
     description: Invalid Fields
    "401":
     description: Unauthorized
    "500":
     description: Internal Server Error
securityDefinitions:
 Bearer:
  type: apiKey
  name: Authorization
  in: header
definitions:
 User:
  properties:
   email:
    type: string
    description: user email
   password:
    type: string
    description: user password
   firstName:
    type: string
    description: user first name
   lastName:
    type: string
    description: user last name
   userName:
    type: string
    description: user public name
 Login:
  properties:
   email:
    type: string
    description: user email
   password:
    type: string
    description: user password
 ApiResponse:
  type: object
  properties:
   status:
    type: integer
   message:
    type: string
   body:
    type: object
    properties:
     id:
      type: string
     email:
      type: string
 LoginResponse:
  type: object
  properties:
   token:
    type: string
 UserProfile:
  type: object
  properties:
   userName:
    type: string
 UserAccount:
  type: object
  properties:
   accountId:
    type: integer
 UserTransaction:
  type: object
  properties:
   accountId:
    type: integer
   transactionId:
    type: integer
   date:
    type: string
 UserModifyTransaction:
  type: object
  properties:
   accountId:
    type: integer
   transactionId:
    type: integer
   category:
    type: integer
   note:
    type: string
 ApiTransactionsResponse:
  type: object
  properties:
   status:
    type: integer
   message:
    type: string
   body:
    type: object
    properties:
     Transactions:
      type: array
      items:
       type: object
       properties:
        transactionId:
         type: integer
        date:
         type: string
        description:
         type: string
        amount:
         type: integer
        balance:
         type: integer
        note:
         type: string
        category:
         type: integer
 ApiAccountResponse:
  type: object
  properties:
   status:
    type: integer
   message:
    type: string
   body:
    type: object
    properties:
     Account:
      type: array
      items:
       type: object
       properties:
        accountId:
         type: integer
        accountName:
         type: string
        transactionCount:
         type: integer
        balance:
         type: integer
 ApiModificationResponse:
  type: object
  properties:
   status:
    type: integer
   message:
    type: string
   body:
    type: object
    properties:
     Transaction:
      type: object
      properties:
       transactionId:
        type: integer
       note:
        type: string
       category:
        type: integer
 ApiDeleteResponse:
  type: object
  properties:
   status:
    type: integer
   message:
    type: string
   body:
    type: object
    properties:
     transactionId:
      type: integer
